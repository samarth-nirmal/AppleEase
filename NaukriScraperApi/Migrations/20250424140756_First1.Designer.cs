// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace NaukriScraperApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250424140756_First1")]
    partial class First1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NaukriScraperApi.Model.JobDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double?>("MatchScore")
                        .HasColumnType("double");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("companyName")
                        .HasColumnType("longtext");

                    b.Property<string>("experienceRequired")
                        .HasColumnType("longtext");

                    b.Property<string>("isApplied")
                        .HasColumnType("longtext");

                    b.Property<string>("jobDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("jobId")
                        .HasColumnType("longtext");

                    b.Property<string>("jobTitle")
                        .HasColumnType("longtext");

                    b.Property<string>("link")
                        .HasColumnType("longtext");

                    b.Property<string>("location")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("JobDetails");
                });

            modelBuilder.Entity("NaukriScraperApi.Model.TokenSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IpAddress")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("IssuedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("JtiHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserAgent")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TokenSessions");
                });

            modelBuilder.Entity("NaukriScraperApi.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GoogleId")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("isNaukriLoggedIn")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("NaukriScraperApi.Model.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Certifications")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CurrentCompany")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CurrentJobTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CurrentSalary")
                        .HasColumnType("int");

                    b.Property<int>("ExpectedSalary")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GitHubUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("GraduationYear")
                        .HasColumnType("int");

                    b.Property<string>("HighestQualification")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Industry")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LinkedInUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PreferredJobRole")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PreferredLocation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PrimarySkills")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Projects")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SecondarySkills")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("TotalExperience")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserProfileSummary")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float?>("XIIPercentage")
                        .HasColumnType("float");

                    b.Property<float?>("XPercentage")
                        .HasColumnType("float");

                    b.Property<string>("noticePeriod")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("willingToRelocate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("NaukriScraperApi.Model.JobDetails", b =>
                {
                    b.HasOne("NaukriScraperApi.Model.User", "User")
                        .WithMany("JobApplications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NaukriScraperApi.Model.UserProfile", b =>
                {
                    b.HasOne("NaukriScraperApi.Model.User", "User")
                        .WithOne("UserProfile")
                        .HasForeignKey("NaukriScraperApi.Model.UserProfile", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NaukriScraperApi.Model.User", b =>
                {
                    b.Navigation("JobApplications");

                    b.Navigation("UserProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
